snippet exprom export function using promise
	export function ${1:fname} (${2:params}) {
		return new Promise(async (resolve, reject) => {
			try {
				${0}
			} catch (err) {
				reject(err)
			}
		})
	}

snippet caw const name = await
	const ${1:name} = await ${0}

snippet if
	if (${1:condition}) {
		${0}
	}

snippet ife
	if (${1:lcond} === ${2:rcond}) {
		${0}
	}

snippet ifne
	if (${1:lcond} !== ${2:rcond}) {
		${0}
	}

snippet else
	else {
		${0}
	}

snippet rr return resolve()
	return resolve(${0})

snippet rrn return resolve()
	return resolve(null)

snippet it mocha it
	it('${1:does something}', () => {
		${0}
	})


snippet ita mocha it
	it('${1:does something}', async () => {
		${0}
	})

snippet af arrow function
	(${1:params}) => {
		${0}
	}

snippet aaf async arrow function
	async (${1:params}) => {
		${0}
	}

snippet eaf empty arrow function
	(${1:params}) => {
		${0}
	}


snippet eaaf empty arrow function
	async (${1:params}) => {
		${0}
	}

snippet exe expect to exist
	expect(${1:expr}).to.exist

snippet exeq expect to eql
	expect(${1:expr}).to.eql(${0:value})

snippet exl expect to have length
	expect(${1:expr}).to.have.length(${0:value})
